@model HostProduction.Models.EquipmentPlacementContractCreateVM

@{
    ViewData["Title"] = "Create";
    var errorMessage = TempData["ErrorMessage"] as string;
}

<h4>Create Equipment Placement Contract</h4>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">
        @errorMessage
    </div>
}

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <strong><label asp-for="ProductionFacilityId" class="control-label"></label></strong>
                <select asp-for="ProductionFacilityId" asp-items="@Model.AvailableProductionFacilities" class="form-select">
                </select>
                <span asp-validation-for="ProductionFacilityId" class="text-danger"></span>
            </div>		
            <br />
            <div class="form-group">
                <strong><label asp-for="ProcessEquipmentTypeId" class="control-label"></label></strong>
                <select asp-for="ProcessEquipmentTypeId" asp-items="@Model.AvailableProcessEquipmentTypes" class="form-select">
                </select>
                <span asp-validation-for="ProcessEquipmentTypeId" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <strong><label asp-for="EquipmentQuantity" class="control-label"></label></strong>
                <input asp-for="EquipmentQuantity" class="form-control" />
                <span asp-validation-for="EquipmentQuantity" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
